<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concurrency on Just a Blog in the Park</title><link>https://www.justabloginthepark.com/tags/concurrency/</link><description>Recent content in Concurrency on Just a Blog in the Park</description><generator>Hugo</generator><language>en-us</language><copyright>&amp;copy; &lt;a href="https://github.com/Artiavis">Jeff Rabinowitz&lt;/a>, 2025</copyright><lastBuildDate>Sat, 17 Mar 2018 23:50:00 -0400</lastBuildDate><atom:link href="https://www.justabloginthepark.com/tags/concurrency/index.xml" rel="self" type="application/rss+xml"/><item><title>Review: Java Concurrency in Practice</title><link>https://www.justabloginthepark.com/2018/03/17/review-java-concurrency-in-practice/</link><pubDate>Sat, 17 Mar 2018 23:50:00 -0400</pubDate><guid>https://www.justabloginthepark.com/2018/03/17/review-java-concurrency-in-practice/</guid><description>&lt;p>I was recently assigned to a new project at work, which requires some concurrent
programming. I&amp;rsquo;ve long put off investing in any formal Java programming texts,
partly out of thriftiness and partially because none of the professional
programming I&amp;rsquo;ve done to date required a formal education/reading of relevant
texts to avoid writing completely incorrect code. Usually in line-of-business
application development, a sub-optimal solution is not &lt;em>completely incorrect&lt;/em>;
at worst, it wastes CPU cycles. However, when it comes to concurrent programming,
there&amp;rsquo;s three options:&lt;/p></description></item><item><title>Multiple Cores and Multithreading</title><link>https://www.justabloginthepark.com/2014/03/09/multiple-cores-and-multithreading/</link><pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate><guid>https://www.justabloginthepark.com/2014/03/09/multiple-cores-and-multithreading/</guid><description>&lt;p>Have you ever seen advertisements for the latest computers which promote fancy processors with multi-core processors and
wonder exactly the advantage of having multiple cores is?&lt;/p>
&lt;p>The most tempting explanation, although perhaps too simplistic, is that “more is better”. The most common
mistake is thinking that &lt;em>n cores must run programs n times faster than one core&lt;/em>, ie a four core processor is
approximately four times faster than a single-core processor. Although &lt;em>this has the potential to happen occasionally&lt;/em>,
the true benefits are actually slightly different. First, though, we must understand what a core &lt;em>does&lt;/em>.&lt;/p></description></item></channel></rss>